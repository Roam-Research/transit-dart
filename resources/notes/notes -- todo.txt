:project transit-dart2
   :author Mike Weaver
   :created 2023-03-11

:section Instructions

   Use this ✓ to mark completed

:section ToDo

   [] Support custom write handlers. -- Actually think the support already
   exists, but there isn't an API to get them inserted into the
   WriteHandlersMap. Do some hack-it-together testing to make sure.

   [] Support custom read handlers. -- Same thing as above, need an API to
   register them.

   [] Double check this in Java version, but I think the emitter and parser
   should clear the cache on each call for each top-level object. UPDATE: yes,
   but it is done in the Read- and WriteFactory's inside the Reader and Writer
   objects they return. So my private `_reset` functions will need to be exposed
   as `init` methods that can be called.

   [] What API will be exposed/exported in the library? Probably a reader/writer
   pair that operates on streams, and then callers of the library can deal with
   connecting those streams back and forth into strings or whatever.

   [] Build some tests where we convert all the way to JSON and confirm against
   the transit samples. Figure out how to integrate the testing that is part of
   transit-format.

   [] `Time` will need to be different for msgpack and verbose.

   [] `Uuid` is also different for msgpack.

:section Done

   [✓] BUG: `null` as a quoted value does not parse.

   [✓] Add == operator and hashCode on wrapper classes, if nothing else, at
   least to support testing.

   [✓] Read-handlers.

   [✓] Implement Keyword and Symbol and the rest of the scalar extension types.
   How will those eventually play with cljd?
